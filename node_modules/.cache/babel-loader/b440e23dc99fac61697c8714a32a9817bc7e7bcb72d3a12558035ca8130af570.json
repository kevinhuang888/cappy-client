{"ast":null,"code":"var _jsxFileName = \"/Users/kevinhuang/Desktop/csprojects/cappy/client/src/components/goals/Goals.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './goals.css';\nimport Category from './Category';\nimport title from '../../assets/goals/title.png';\nimport { useState, useEffect } from 'react';\nimport Header from '../header/Header';\nimport NewCategory from './NewCategory';\nimport NewGoal from './NewGoal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Goals({\n  stars,\n  setStars\n}) {\n  _s();\n  const sampleGoalList1 = [{\n    id: 1,\n    content: \"Dribble a Basketball 5 times\",\n    completed: false,\n    repeat: false,\n    stars: 3,\n    edit: false,\n    tempInput: \"\"\n  }, {\n    id: 2,\n    content: \"Play 10 hours of Fortnite\",\n    completed: false,\n    repeat: false,\n    stars: 19,\n    edit: false,\n    tempInput: \"\"\n  }];\n  const goalTemplate = {\n    id: 1,\n    content: \"Sample Goal\",\n    completed: false,\n    repeat: false,\n    stars: 3,\n    edit: true,\n    tempInput: \"\"\n  };\n  const catTemplate = {\n    name: \"Untitled Category\",\n    active: false,\n    goalList: []\n  };\n\n  //Delete Later\n  const sampleCategories = [{\n    name: \"Category 1\",\n    active: false,\n    goalList: sampleGoalList1\n  }, {\n    name: \"Category 2\",\n    active: false,\n    goalList: []\n  }];\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(false);\n  const [newGoal, setNewGoal] = useState(false);\n  const [currCategory, setCurrCategory] = useState({});\n  const [render, setRender] = useState({});\n  const toggleActive = index => {\n    const newCategories = [...categories];\n    newCategories[index].active = !newCategories[index].active;\n    setCategories(newCategories);\n  };\n  const toggleEditGoal = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].edit = !newCategories[catIndex].goalList[goalIndex].edit;\n    setCategories(newCategories);\n  };\n  const editGoalText = (catIndex, goalIndex, content) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].tempInput = content;\n    setCategories(newCategories);\n  };\n  const removeGoal = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList.splice(goalIndex, 1);\n    setCategories(newCategories);\n  };\n  const setGoalContent = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].content = newCategories[catIndex].goalList[goalIndex].tempInput;\n    setCategories(newCategories);\n  };\n  const toggleGoalRepeat = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].repeat = !newCategories[catIndex].goalList[goalIndex].repeat;\n    setCategories(newCategories);\n  };\n  const addCategory = name => {\n    const newCat = {\n      name: name,\n      goalList: []\n    };\n    postCategory(newCat);\n    newCat.active = false;\n    const newCategories = [...categories];\n    newCategories.push(newCat);\n    setCategories(newCategories);\n  };\n  async function postCategory(newCategory) {\n    try {\n      const response = await fetch(`http://localhost:5002/category/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json' // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      });\n      if (!response.ok) {\n        throw new Error(`postCategoryResponse status: ${response.status}`);\n      }\n      const category = await response.json();\n      console.log(`New Category created: ${category}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  async function putCategory(newCategory) {\n    try {\n      const response = await fetch(`http://localhost:5002/category/${currCategory._id}`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json' // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      });\n      if (!response.ok) {\n        throw new Error(`postCategoryResponse status: ${response.status}`);\n      }\n      const categories = await response.json();\n      setCategories(categories);\n      console.log(`New Category List: ${categories}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  const addGoal = goal => {\n    postGoal(goal);\n    const newCategories = [...categories];\n    const categoryObj = newCategories.find(categories => categories._id === currCategory._id);\n    console.log(`categoryObj: ${categoryObj}`);\n    if (categoryObj) {\n      categoryObj.goalList.push(goal);\n    } else {\n      console.err(\"Can't find Category ID\");\n    }\n    putCategory(categoryObj);\n  };\n  async function postGoal(newGoal) {\n    try {\n      const response = await fetch(`http://localhost:5002/goal/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json' // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newGoal)\n      });\n      if (!response.ok) {\n        throw new Error(`postGoal status: ${response.status}`);\n      }\n      const goal = await response.json();\n      console.log(`New Goal created: ${goal}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await fetch(`http://localhost:5002/category/`);\n        if (!response.ok) {\n          throw new Error(`Response status: ${response.status}`);\n        }\n        const categories = await response.json();\n        setCategories(categories);\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n    getCategories();\n    return;\n  }, [render, categories.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goals\",\n    id: \"goals\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      stars: stars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), newCategory && /*#__PURE__*/_jsxDEV(NewCategory, {\n      setNewCategory: setNewCategory,\n      addCategory: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 23\n    }, this), newGoal && /*#__PURE__*/_jsxDEV(NewGoal, {\n      setNewGoal: setNewGoal,\n      addGoal: addGoal,\n      currCategory: currCategory,\n      setCurrCategory: setCurrCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goalBody \" + (newCategory && \"blur\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goalFrame\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goalContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titleContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: title,\n              alt: \"Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setNewCategory(true),\n              children: \"+ New Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categoryList\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(Category, {\n                category: category,\n                toggleActive: toggleActive,\n                index: index,\n                toggleEditGoal: toggleEditGoal,\n                editGoalText: editGoalText,\n                setGoalContent: setGoalContent,\n                setCurrCategory: setCurrCategory,\n                removeGoal: removeGoal,\n                toggleGoalRepeat: toggleGoalRepeat,\n                addGoal: addGoal,\n                stars: stars,\n                setStars: setStars,\n                setNewGoal: setNewGoal\n              }, category._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(Goals, \"KkT7ubUPRl3UNYncNYJ8a22vtH4=\");\n_c = Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","Category","title","useState","useEffect","Header","NewCategory","NewGoal","jsxDEV","_jsxDEV","Goals","stars","setStars","_s","sampleGoalList1","id","content","completed","repeat","edit","tempInput","goalTemplate","catTemplate","name","active","goalList","sampleCategories","categories","setCategories","newCategory","setNewCategory","newGoal","setNewGoal","currCategory","setCurrCategory","render","setRender","toggleActive","index","newCategories","toggleEditGoal","catIndex","goalIndex","editGoalText","removeGoal","splice","setGoalContent","toggleGoalRepeat","addCategory","newCat","postCategory","push","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","category","json","console","log","err","error","message","putCategory","_id","addGoal","goal","postGoal","categoryObj","find","getCategories","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","map","_c","$RefreshReg$"],"sources":["/Users/kevinhuang/Desktop/csprojects/cappy/client/src/components/goals/Goals.jsx"],"sourcesContent":["import React from 'react'\nimport './goals.css'\nimport Category from './Category'\nimport title from '../../assets/goals/title.png'\nimport { useState,useEffect } from 'react'\nimport Header from '../header/Header'\nimport NewCategory from './NewCategory'\nimport NewGoal from './NewGoal'\n\nexport default function Goals({stars,setStars}) {\n\n  const sampleGoalList1 = [\n    {\n      id:1,\n      content:\"Dribble a Basketball 5 times\",\n      completed:false,\n      repeat:false,\n      stars:3,\n      edit:false,\n      tempInput:\"\"\n    },\n    {\n      id:2,\n      content:\"Play 10 hours of Fortnite\",\n      completed:false,\n      repeat:false,\n      stars:19,\n      edit:false,\n      tempInput:\"\"\n    }\n  ]\n\n  const goalTemplate = \n    {\n      id:1,\n      content:\"Sample Goal\",\n      completed:false,\n      repeat:false,\n      stars:3,\n      edit:true,\n      tempInput:\"\"\n    }\n\n    const catTemplate = \n    {\n      name:\"Untitled Category\",\n      active:false,\n      goalList:[]\n    }\n  \n\n    //Delete Later\n  const sampleCategories = [\n    {\n        name:\"Category 1\",\n        active:false,\n        goalList:sampleGoalList1\n    },\n    {\n      name:\"Category 2\",\n      active:false,\n      goalList:[]\n  }\n]\n  const [categories,setCategories] = useState([])\n  const [newCategory,setNewCategory] = useState(false);\n  const [newGoal,setNewGoal] = useState(false);\n  const [currCategory,setCurrCategory] = useState({})\n  const [render,setRender] = useState({})\n\n  const toggleActive = (index) => {\n    const newCategories = [...categories]\n    newCategories[index].active = !newCategories[index].active\n    setCategories(newCategories)\n  }\n\n  const toggleEditGoal = (catIndex, goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].edit = !newCategories[catIndex].goalList[goalIndex].edit\n    setCategories(newCategories)\n  }\n  const editGoalText = (catIndex, goalIndex, content) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].tempInput = content\n    setCategories(newCategories)\n  }\n\n\n  const removeGoal = (catIndex,goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList.splice(goalIndex,1)\n    setCategories(newCategories)\n  }\n  \n  const setGoalContent = (catIndex,goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].content = newCategories[catIndex].goalList[goalIndex].tempInput\n    setCategories(newCategories)\n  }\n\n  const toggleGoalRepeat = (catIndex,goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].repeat = !newCategories[catIndex].goalList[goalIndex].repeat\n    setCategories(newCategories)\n  }\n\n  const addCategory = (name) => {\n\n    const newCat = {\n      name:name,\n      goalList:[]\n    }\n\n    postCategory(newCat)\n\n    newCat.active=false\n    const newCategories = [...categories]\n    newCategories.push(newCat)\n    setCategories(newCategories)\n  }\n\n  async function postCategory(newCategory) {\n    try{\n      const response = await fetch(`http://localhost:5002/category/`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json', // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      })\n      if(!response.ok){\n        throw new Error(`postCategoryResponse status: ${response.status}`)\n      }\n      const category = await response.json()\n      console.log(`New Category created: ${category}`)\n\n    } catch(err){\n      console.error(err.message)\n    }\n  }\n\n  async function putCategory(newCategory) {\n    try{\n      const response = await fetch(`http://localhost:5002/category/${currCategory._id}`,{\n        method:\"PUT\",\n        headers: {\n          'Content-Type': 'application/json', // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      })\n      if(!response.ok){\n        throw new Error(`postCategoryResponse status: ${response.status}`)\n      }\n      const categories = await response.json()\n      setCategories(categories)\n      console.log(`New Category List: ${categories}`)\n\n    } catch(err){\n      console.error(err.message)\n    }\n  }\n\n  const addGoal = (goal) => {\n    postGoal(goal)\n    const newCategories = [...categories]\n    const categoryObj = newCategories.find(categories => categories._id === currCategory._id)\n    console.log(`categoryObj: ${categoryObj}`)\n    if(categoryObj){\n      categoryObj.goalList.push(goal)\n    }\n    else{\n      console.err(\"Can't find Category ID\")\n    }\n    putCategory(categoryObj)\n  }\n\n  async function postGoal(newGoal) {\n    try{\n      const response = await fetch(`http://localhost:5002/goal/`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json', // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newGoal)\n      })\n      if(!response.ok){\n        throw new Error(`postGoal status: ${response.status}`)\n      }\n      const goal = await response.json()\n      console.log(`New Goal created: ${goal}`)\n\n    } catch(err){\n      console.error(err.message)\n    }\n  }\n\n  useEffect(() => {\n    async function getCategories() {\n      try{\n        const response = await fetch(`http://localhost:5002/category/`)\n        if(!response.ok){\n          throw new Error(`Response status: ${response.status}`)\n        }\n        const categories = await response.json()\n        setCategories(categories)\n      } catch(err){\n        console.error(err.message)\n      }\n    }\n    getCategories()\n    return\n  },[render,categories.length])\n  \n\n  return (\n    <div className=\"goals\" id=\"goals\">\n      <Header stars={stars} />\n      {newCategory && <NewCategory setNewCategory={setNewCategory} addCategory={addCategory} />}\n      {newGoal && <NewGoal setNewGoal={setNewGoal} addGoal={addGoal} currCategory={currCategory} setCurrCategory={setCurrCategory} />}\n      <div className={\"goalBody \" + (newCategory && \"blur\")}>\n        <div className=\"goalFrame\">\n          <div className=\"goalContainer\">\n            <div className=\"titleContainer\">\n              <img src={title} alt=\"Goals\" />\n            </div>\n            <div className=\"buttonContainer\">\n              <button onClick={() => setNewCategory(true)}>+ New Category</button>\n            </div>\n            <div className=\"categoryList\">\n              <ul>\n                {categories.map((category,index) => (\n                  <Category key={category._id} category={category} toggleActive={toggleActive} index={index} toggleEditGoal={toggleEditGoal} \n                  editGoalText={editGoalText} setGoalContent={setGoalContent} setCurrCategory={setCurrCategory}\n                  removeGoal={removeGoal} toggleGoalRepeat={toggleGoalRepeat} addGoal={addGoal} stars={stars} setStars={setStars}\n                  setNewGoal={setNewGoal} />\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}