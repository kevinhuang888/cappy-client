{"ast":null,"code":"var _jsxFileName = \"/Users/kevinhuang/Desktop/csprojects/cappy/client/src/components/goals/Goals.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './goals.css';\nimport Category from './Category';\nimport title from '../../assets/goals/title.png';\nimport { useState, useEffect } from 'react';\nimport Header from '../header/Header';\nimport NewCategory from './NewCategory';\nimport NewGoal from './NewGoal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Goals({\n  stars,\n  setStars\n}) {\n  _s();\n  const sampleGoalList1 = [{\n    id: 1,\n    content: \"Dribble a Basketball 5 times\",\n    completed: false,\n    repeat: false,\n    stars: 3,\n    edit: false,\n    tempInput: \"\"\n  }, {\n    id: 2,\n    content: \"Play 10 hours of Fortnite\",\n    completed: false,\n    repeat: false,\n    stars: 19,\n    edit: false,\n    tempInput: \"\"\n  }];\n  const goalTemplate = {\n    id: 1,\n    content: \"Sample Goal\",\n    completed: false,\n    repeat: false,\n    stars: 3,\n    edit: true,\n    tempInput: \"\"\n  };\n  const catTemplate = {\n    name: \"Untitled Category\",\n    active: false,\n    goalList: []\n  };\n\n  //Delete Later\n  const sampleCategories = [{\n    name: \"Category 1\",\n    active: false,\n    goalList: sampleGoalList1\n  }, {\n    name: \"Category 2\",\n    active: false,\n    goalList: []\n  }];\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState(false);\n  const [newGoal, setNewGoal] = useState(false);\n  const [clickedCategoryId, setClickedCategoryId] = useState(\"\");\n  const [clickedCategoryName, setClickedCategoryName] = useState(\"\");\n  const toggleActive = index => {\n    const newCategories = [...categories];\n    newCategories[index].active = !newCategories[index].active;\n    setCategories(newCategories);\n  };\n  const setActive = index => {\n    const newCategories = [...categories];\n    newCategories[index].active = true;\n    setCategories(newCategories);\n  };\n  const toggleEditGoal = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].edit = !newCategories[catIndex].goalList[goalIndex].edit;\n    setCategories(newCategories);\n  };\n  const editGoalText = (catIndex, goalIndex, content) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].tempInput = content;\n    setCategories(newCategories);\n  };\n  const removeGoal = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList.splice(goalIndex, 1);\n    setCategories(newCategories);\n  };\n  const setGoalContent = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].content = newCategories[catIndex].goalList[goalIndex].tempInput;\n    setCategories(newCategories);\n  };\n  const toggleGoalRepeat = (catIndex, goalIndex) => {\n    const newCategories = [...categories];\n    newCategories[catIndex].goalList[goalIndex].repeat = !newCategories[catIndex].goalList[goalIndex].repeat;\n    setCategories(newCategories);\n  };\n  const addCategory = name => {\n    const newCat = {\n      name: name,\n      goalList: []\n    };\n    postCategory(newCat);\n    newCat.active = false;\n    const newCategories = [...categories];\n    newCategories.push(newCat);\n    setCategories(newCategories);\n  };\n  async function postCategory(newCategory) {\n    try {\n      const response = await fetch(`http://localhost:5002/category/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json' // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      });\n      if (!response.ok) {\n        throw new Error(`postCategoryResponse status: ${response.status}`);\n      }\n      const category = await response.json();\n      console.log(`New Category created: ${category}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  async function putCategory(newCategory) {\n    try {\n      const response = await fetch(`http://localhost:5002/category/`, {\n        method: \"PUT\",\n        headers: {\n          'Content-Type': 'application/json' // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      });\n      if (!response.ok) {\n        throw new Error(`postCategoryResponse status: ${response.status}`);\n      }\n      const category = await response.json();\n      console.log(`New Category created: ${category}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  const addGoal = goal => {\n    postGoal(goal);\n    const newCategories = [...categories];\n    newCategories;\n    putCategory();\n  };\n  async function postGoal(newGoal) {\n    try {\n      const response = await fetch(`http://localhost:5002/goal/`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json' // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newGoal)\n      });\n      if (!response.ok) {\n        throw new Error(`postGoal status: ${response.status}`);\n      }\n      const goal = await response.json();\n      console.log(`New Goal created: ${goal}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n  useEffect(() => {\n    async function getCategories() {\n      try {\n        const response = await fetch(`http://localhost:5002/category/`);\n        if (!response.ok) {\n          throw new Error(`Response status: ${response.status}`);\n        }\n        const categories = await response.json();\n        setCategories(categories);\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n    getCategories();\n    return;\n  }, [categories.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"goals\",\n    id: \"goals\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      stars: stars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), newCategory && /*#__PURE__*/_jsxDEV(NewCategory, {\n      setNewCategory: setNewCategory,\n      addCategory: addCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 23\n    }, this), newGoal && /*#__PURE__*/_jsxDEV(NewGoal, {\n      setNewGoal: setNewGoal,\n      addGoal: addGoal,\n      clickedCategoryName: clickedCategoryName,\n      setClickedCategoryName: setClickedCategoryName,\n      setClickedCategoryId: setClickedCategoryId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"goalBody \" + (newCategory && \"blur\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goalFrame\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goalContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titleContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: title,\n              alt: \"Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttonContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setNewCategory(true),\n              children: \"+ New Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"categoryList\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: categories.map((category, index) => console.log(`Cat Key: ${category._id}`) || /*#__PURE__*/_jsxDEV(Category, {\n                category: category,\n                toggleActive: toggleActive,\n                index: index,\n                toggleEditGoal: toggleEditGoal,\n                editGoalText: editGoalText,\n                setGoalContent: setGoalContent,\n                setClickedCategoryId: setClickedCategoryId,\n                setClickedCategoryName: setClickedCategoryName,\n                removeGoal: removeGoal,\n                toggleGoalRepeat: toggleGoalRepeat,\n                addGoal: addGoal,\n                stars: stars,\n                setStars: setStars,\n                setNewGoal: setNewGoal\n              }, category._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(Goals, \"AQUGxRV5MKhQe9wSdGmB7CCcNrY=\");\n_c = Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","Category","title","useState","useEffect","Header","NewCategory","NewGoal","jsxDEV","_jsxDEV","Goals","stars","setStars","_s","sampleGoalList1","id","content","completed","repeat","edit","tempInput","goalTemplate","catTemplate","name","active","goalList","sampleCategories","categories","setCategories","newCategory","setNewCategory","newGoal","setNewGoal","clickedCategoryId","setClickedCategoryId","clickedCategoryName","setClickedCategoryName","toggleActive","index","newCategories","setActive","toggleEditGoal","catIndex","goalIndex","editGoalText","removeGoal","splice","setGoalContent","toggleGoalRepeat","addCategory","newCat","postCategory","push","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","category","json","console","log","err","error","message","putCategory","addGoal","goal","postGoal","getCategories","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","map","_id","_c","$RefreshReg$"],"sources":["/Users/kevinhuang/Desktop/csprojects/cappy/client/src/components/goals/Goals.jsx"],"sourcesContent":["import React from 'react'\nimport './goals.css'\nimport Category from './Category'\nimport title from '../../assets/goals/title.png'\nimport { useState,useEffect } from 'react'\nimport Header from '../header/Header'\nimport NewCategory from './NewCategory'\nimport NewGoal from './NewGoal'\n\nexport default function Goals({stars,setStars}) {\n\n  const sampleGoalList1 = [\n    {\n      id:1,\n      content:\"Dribble a Basketball 5 times\",\n      completed:false,\n      repeat:false,\n      stars:3,\n      edit:false,\n      tempInput:\"\"\n    },\n    {\n      id:2,\n      content:\"Play 10 hours of Fortnite\",\n      completed:false,\n      repeat:false,\n      stars:19,\n      edit:false,\n      tempInput:\"\"\n    }\n  ]\n\n  const goalTemplate = \n    {\n      id:1,\n      content:\"Sample Goal\",\n      completed:false,\n      repeat:false,\n      stars:3,\n      edit:true,\n      tempInput:\"\"\n    }\n\n    const catTemplate = \n    {\n      name:\"Untitled Category\",\n      active:false,\n      goalList:[]\n    }\n  \n\n    //Delete Later\n  const sampleCategories = [\n    {\n        name:\"Category 1\",\n        active:false,\n        goalList:sampleGoalList1\n    },\n    {\n      name:\"Category 2\",\n      active:false,\n      goalList:[]\n  }\n]\n  const [categories,setCategories] = useState([])\n  const [newCategory,setNewCategory] = useState(false);\n  const [newGoal,setNewGoal] = useState(false);\n  const [clickedCategoryId,setClickedCategoryId] = useState(\"\")\n  const [clickedCategoryName,setClickedCategoryName] = useState(\"\")\n\n  const toggleActive = (index) => {\n    const newCategories = [...categories]\n    newCategories[index].active = !newCategories[index].active\n    setCategories(newCategories)\n  }\n\n  const setActive = (index) => {\n    const newCategories = [...categories]\n    newCategories[index].active = true\n    setCategories(newCategories)\n  }\n\n  const toggleEditGoal = (catIndex, goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].edit = !newCategories[catIndex].goalList[goalIndex].edit\n    setCategories(newCategories)\n  }\n  const editGoalText = (catIndex, goalIndex, content) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].tempInput = content\n    setCategories(newCategories)\n  }\n\n \n\n  const removeGoal = (catIndex,goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList.splice(goalIndex,1)\n    setCategories(newCategories)\n  }\n  \n  const setGoalContent = (catIndex,goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].content = newCategories[catIndex].goalList[goalIndex].tempInput\n    setCategories(newCategories)\n  }\n\n  const toggleGoalRepeat = (catIndex,goalIndex) => {\n    const newCategories = [...categories]\n    newCategories[catIndex].goalList[goalIndex].repeat = !newCategories[catIndex].goalList[goalIndex].repeat\n    setCategories(newCategories)\n  }\n\n  const addCategory = (name) => {\n\n    const newCat = {\n      name:name,\n      goalList:[]\n    }\n\n    postCategory(newCat)\n\n    newCat.active=false\n    const newCategories = [...categories]\n    newCategories.push(newCat)\n    setCategories(newCategories)\n  }\n\n  async function postCategory(newCategory) {\n    try{\n      const response = await fetch(`http://localhost:5002/category/`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json', // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      })\n      if(!response.ok){\n        throw new Error(`postCategoryResponse status: ${response.status}`)\n      }\n      const category = await response.json()\n      console.log(`New Category created: ${category}`)\n\n    } catch(err){\n      console.error(err.message)\n    }\n  }\n\n  async function putCategory(newCategory) {\n    try{\n      const response = await fetch(`http://localhost:5002/category/`,{\n        method:\"PUT\",\n        headers: {\n          'Content-Type': 'application/json', // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newCategory)\n      })\n      if(!response.ok){\n        throw new Error(`postCategoryResponse status: ${response.status}`)\n      }\n      const category = await response.json()\n      console.log(`New Category created: ${category}`)\n\n    } catch(err){\n      console.error(err.message)\n    }\n  }\n\n  const addGoal = (goal) => {\n    postGoal(goal)\n    const newCategories = [...categories]\n    newCategories\n    putCategory()\n  }\n\n  async function postGoal(newGoal) {\n    try{\n      const response = await fetch(`http://localhost:5002/goal/`,{\n        method:\"POST\",\n        headers: {\n          'Content-Type': 'application/json', // Ensure the body is sent as JSON\n        },\n        body: JSON.stringify(newGoal)\n      })\n      if(!response.ok){\n        throw new Error(`postGoal status: ${response.status}`)\n      }\n      const goal = await response.json()\n      console.log(`New Goal created: ${goal}`)\n\n    } catch(err){\n      console.error(err.message)\n    }\n  }\n\n  useEffect(() => {\n    async function getCategories() {\n      try{\n        const response = await fetch(`http://localhost:5002/category/`)\n        if(!response.ok){\n          throw new Error(`Response status: ${response.status}`)\n        }\n        const categories = await response.json()\n        setCategories(categories)\n      } catch(err){\n        console.error(err.message)\n      }\n    }\n    getCategories()\n    return\n  },[categories.length])\n  \n\n  return (\n    <div className=\"goals\" id=\"goals\">\n      <Header stars={stars} />\n      {newCategory && <NewCategory setNewCategory={setNewCategory} addCategory={addCategory} />}\n      {newGoal && <NewGoal setNewGoal={setNewGoal} addGoal={addGoal} clickedCategoryName={clickedCategoryName} setClickedCategoryName={setClickedCategoryName} setClickedCategoryId={setClickedCategoryId} />}\n      <div className={\"goalBody \" + (newCategory && \"blur\")}>\n        <div className=\"goalFrame\">\n          <div className=\"goalContainer\">\n            <div className=\"titleContainer\">\n              <img src={title} alt=\"Goals\" />\n            </div>\n            <div className=\"buttonContainer\">\n              <button onClick={() => setNewCategory(true)}>+ New Category</button>\n            </div>\n            <div className=\"categoryList\">\n              <ul>\n                {categories.map((category,index) => (\n                  console.log(`Cat Key: ${category._id}`) ||\n                  <Category key={category._id} category={category} toggleActive={toggleActive} index={index} toggleEditGoal={toggleEditGoal} \n                  editGoalText={editGoalText} setGoalContent={setGoalContent} setClickedCategoryId={setClickedCategoryId} setClickedCategoryName={setClickedCategoryName}\n                  removeGoal={removeGoal} toggleGoalRepeat={toggleGoalRepeat} addGoal={addGoal} stars={stars} setStars={setStars}\n                  setNewGoal={setNewGoal} />\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}